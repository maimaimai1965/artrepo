
#Название приложения.
spring.application.name=art
#Каталог, в который выводятся логи приложения (при его запуске на внутреннем Tomcat) .
application.log-path=logs/art

# Дефолтные свойства DataSource и пула соединений

server.port=8555

# ==========================================================================
# Oracle
# ==========================================================================

#spring.profiles.active=db-oracle
#spring.profiles.active=db-oracle-jndi


# ==========================================================================
# PostgreSQL
# ==========================================================================
# Все профили можно использовать для развертывания на внешнем Tomcat.

# ****** Профиль можно использовать в Idea в "Run Dashboard" и "Application Servers". ********
# DB - PostgreSQL.
# Используется пул соединений из embedded Tomcat (даже если приложение развернуто на внешнем Tomcat).
# DataSource - по настройкам из application-db-postgres.properties.
#spring.profiles.active=db-postgres, ds-check

# ****** Профиль можно использовать в Idea в "Run Dashboard", но не для "Application Servers"! ********
# DB - PostgreSQL.
# При запуске приложения в Idea в "Run Dashboard":
#   DataSource находим по JNDI имени, заданным в application-db-postgres-jndi.properties. Настройки DataSource берутся
#   из файла application-db-postgres.properties.
#   Используется пул соединений из embedded Tomcat.
# При запуске приложения на внешнем Tomcat производится настройка, описанная в Production профиле (см. ниже).
#spring.profiles.active=db-postgres, db-postgres-jndi, ds-jndi-embedded, ds-check

# ****** Это Production профиль для развертывании на внешнем Tomcat . ********
# ****** Профиль не используется в Idea!                              ********
# DB - PostgreSQL.
# DataSource находим по JNDI имени файла (заданного в application-db-postgres-jndi.properties) из Tomcat файла
# conf/context.xml. Настройки DataSource берутся из свойств этого ресурса.
# Пример задания ресурса:
# <Resource name="jdbc/art_postgres" auth="Container"
#           factory="org.apache.tomcat.jdbc.pool.DataSourceFactory"
#           type="org.apache.tomcat.jdbc.pool.DataSource"
#           driverClassName="org.postgresql.Driver"
#           url="jdbc:postgresql://127.0.0.1:5432/art"
#           username="postgres" password="postgres"
#           maxActive="10" maxIdle="5" minIdle="2" initialSize="2"
#           maxWait="30000"/>
# В файле conf/context.xml обязательно должен существовать ресурс с этим JNDI именем. Если его нет, то приложение
# выдаст ошибку.
# Используется пул соединений из внешнего Tomcat.
#spring.profiles.active=db-postgres, db-postgres-jndi, ds-check


# ==========================================================================
# H2
# ==========================================================================
# Все профили можно использовать для развертывания на внешнем Tomcat.

# ****** Профиль можно использовать в Idea в "Run Dashboard" и "Application Servers". ********
# DB - H2 в памяти.
# Используется пул соединений из embedded Tomcat (даже если приложение развернуто на внешнем Tomcat).
# DataSource - по настройкам из application-db-h2-in-memory.properties.
spring.profiles.active=db-h2-in-memory, ds-check

# ****** Профиль можно использовать в Idea в "Run Dashboard", но не для "Application Servers"! ********
# DB - H2 в памяти.
# При запуске приложения в Idea в "Run Dashboard":
#   DataSource находим по JNDI имени, занным в application-db-h2-jndi.properties.
#   Настройки DataSource берутся из файла application-db-h2-in-memory.properties.
#   Используется пул соединений, созданный в embedded Tomcat.
# При запуске приложения на внешнем Tomcat производится настройка, описанная в Production профиле (см. ниже).
#spring.profiles.active=db-h2-in-memory, db-h2-jndi, ds-jndi-embedded, ds-check

# ****** Это Production профиль для развертывании на внешнем Tomcat . ********
# ****** Профиль не используется в Idea!                              ********
# DB - H2 в памяти.
# DataSource находим по JNDI имени файла (заданного в application-db-h2-jndi.properties) из Tomcat файла conf/context.xml.
# Настройки DataSource берутся из свойств этого ресурса.
# Пример задания ресурса:
# <Resource name="jdbc/art_h2" auth="Container"
#           factory="org.apache.tomcat.jdbc.pool.DataSourceFactory"
#           type="org.apache.tomcat.jdbc.pool.DataSource"
#           driverClassName="org.h2.Driver"
#           url="jdbc:h2:file:D:/java/work/idea_home/art/_db/h2/art;AUTO_SERVER=TRUE"
#           username="art" password="art"
#           maxActive="10" maxIdle="5" minIdle="2" initialSize="2"
#           maxWait="30000"/>
# В файле должен быть обязательно существовать ресурс с этим JNDI именем. Если он не наден, то приложение выдаст ошибку.
# Используется пул соединений, созданный во внешнем Tomcat.
#spring.profiles.active=db-h2-in-memory, db-h2-jndi, ds-check


# ****** Профиль можно использовать в Idea в "Run Dashboard" и "Application Servers". ********
# DB - H2 на диске.
# Настройки DataSource берутся из файла application-db-h2-in-file.properties.
# Используется пул соединений из embedded Tomcat (даже если приложение развернуто на внешнем Tomcat).
#spring.profiles.active=db-h2-in-file, ds-check

# ****** Профиль можно использовать в Idea в "Run Dashboard", но не для "Application Servers"! ********
# DB - H2 на диске.
# При запуске приложения в Idea в "Run Dashboard":
#   DataSource находим по JNDI имени, занным в application-db-h2-jndi.properties. Настройки DataSource берутся
#   из файла application-db-h2-in-file.properties.
#   Используется пул соединений из embedded Tomcat.
# При запуске приложения на внешнем Tomcat производится настройка, описанная в Production профиле (см. ниже).
#spring.profiles.active=db-h2-in-file, db-h2-jndi, ds-jndi-embedded, ds-check

# ****** Это Production профиль для развертывании на внешнем Tomcat . ********
# ****** Профиль не используется в Idea!                              ********
# DB - H2 на диске.
# DataSource находим по JNDI имени файла (заданного в application-db-h2-jndi.properties) из Tomcat файла conf/context.xml.
# Настройки DataSource берутся из свойств этого ресурса.
# Пример задания ресурса:
# <Resource name="jdbc/art_h2" auth="Container"
#           factory="org.apache.tomcat.jdbc.pool.DataSourceFactory"
#           type="org.apache.tomcat.jdbc.pool.DataSource"
#           driverClassName="org.h2.Driver"
#           url="jdbc:h2:file:D:/java/work/idea_home/art/_db/h2/art;AUTO_SERVER=TRUE"
#           username="art" password="art"
#           maxActive="10" maxIdle="5" minIdle="2" initialSize="2"
#           maxWait="30000"/>
# В файле должен быть обязательно существовать ресурс с этим JNDI именем. Если он не наден, то приложение выдаст ошибку.
# Используется пул соединений из внешнего Tomcat.
#spring.profiles.active=db-h2-in-file, db-h2-jndi, ds-check
